@model IEnumerable<TaskManagementSystem_ASP.Net_MVC.Models.Task>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<head>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
</head>

<h1 class="title">@ViewData["Title"]</h1>
<br />
<br />

<div class="row">
    <div class="col">
        <a asp-action="Create">
            <div class="giveBorder">
                <i class="material-icons">add</i>
                Create New
            </div>
        </a>
    </div>
    <div class="col form-group">
        <label name="sortby">Sort By</label>
        <form asp-action="Index" method="get">
            <select name="sortBy" class="form-control" onchange="this.form.submit()">
                <option value="DueDate" selected="@(ViewBag.SortBy == "DueDate")">Due Date</option>
                <option value="Priority" selected="@(ViewBag.SortBy == "Priority")">Priority</option>
                <option value="Title" selected="@(ViewBag.SortBy == "Title")">Title</option>
            </select>
        </form>
    </div>
</div>

@foreach (var item in Model)
{
    <div class="taskContainer text-center">
        <div class="row">
            <div class="col">
                <div class="text-center">
                    <p class="title-text">@item.Title</p>
                    <p class="desc-text">@item.Description</p>
                    <p class="dueDate-text">@item.DueDate</p>
                    <p class="priority-text">@Html.DisplayFor(modelItem => item.Priority)</p>

                    <div class="col">
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener("DOMContentLoaded", function() {
        var priorityElements = document.querySelectorAll(".priority-text");

        priorityElements.forEach(function(element) {
            var priorityValue = element.textContent.trim().toLowerCase();

            if (priorityValue === "high") {
                element.classList.add("red-text");
            } else if (priorityValue === "medium") {
                element.classList.add("orange-text");
            } else if (priorityValue === "low") {
                element.classList.add("green-text");
            }
        });
    });
</script>

}
